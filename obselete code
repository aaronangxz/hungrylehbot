'''
def places_random(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    logger.info("%s selected random.", user.first_name)
    randomlist = ['https://goo.gl/maps/P5C5nDYrn8G19LPT6','https://g.page/pollensingapore?share','https://goo.gl/maps/HAeyHWqV3vmDQnNs9',
                    'https://g.page/OverEasySG?share','https://g.page/theassemblygroundcineleisure?share','https://goo.gl/maps/o8DuJkroyoSK1MqK9',
                    'https://goo.gl/maps/1iX2BCbDSKWUVepm7','https://goo.gl/maps/G4cv4uBhP3ve7soc8','https://goo.gl/maps/DGzoTrv45uD8HXKw5',
                    'https://goo.gl/maps/YKWo1ckMJ3qeEXVZA','https://g.page/wangdaebakbbq?share','https://goo.gl/maps/Fftfy929T1dS7V6t7',
                    'https://goo.gl/maps/3TANCBdHR9kfVm1w5','https://goo.gl/maps/LAhF4yuABZpGvHgr7','https://goo.gl/maps/rkNoBPjYK5LtK2Ax8',
                    'https://g.page/prego-sg?share','https://goo.gl/maps/74wZZ3vUwj3aFmGGA','https://g.page/jibiru?share',
                    'https://g.page/menbaka_sg?share','https://g.page/HaidilaoIMM?share','https://goo.gl/maps/x5e4Ro9NxgucRHjM8',
                    'https://g.page/BrotzeitWestgate?share','https://goo.gl/maps/UR37N1bBYAHfyPLN8','https://goo.gl/maps/QL6kJ1Hu9MxL3wVQ8',
                    'https://goo.gl/maps/JWNgN5uFBGo1FjTx8','https://goo.gl/maps/9hmwFiL9DC5ugpEN8','https://g.page/ENSakaba-JEM?share',
                    'https://goo.gl/maps/qDeTVYc9RxSbU9rv8','https://goo.gl/maps/Gz2XCxEdNP5oomxu7','https://goo.gl/maps/5VtjHapbwQ714RmF6',
                    'https://goo.gl/maps/MENsUrKojYjeVP649','https://goo.gl/maps/n3zcrLJZsXkZYiwT8','https://goo.gl/maps/v5MJhQGfwMrDy2d9A',
                    'https://g.page/OPPABBQ?share','https://g.page/burger-lobster-jewel-changi?share','https://goo.gl/maps/u7DJozX5Knsno5Gq6',
                    'https://g.page/elfuegosg?share','https://g.page/TanukiRawJewel?share','https://goo.gl/maps/Et4cABQ1rMkbe4u5A',
                    'https://goo.gl/maps/TLAJvBSW6bY9A4Kw5','https://goo.gl/maps/GYPWsS6sYiDVa7xQA','https://goo.gl/maps/fGzi5m6hUJcYBSBE9',
                    'https://goo.gl/maps/xDcAHz7fWh4aF8kL8','https://goo.gl/maps/ZCb5nQAVZRrii7Ab9','https://goo.gl/maps/3KhF4bfoRwtr9Tid8',
                    'https://goo.gl/maps/CrKBC3PQcaL5sU1M9','https://g.page/itacho-sushi-bedok-mall?share','https://goo.gl/maps/VoMsTWLwSMMMf1g88',
                    'https://goo.gl/maps/HKGCTcCXar1u9jN87','https://g.page/tonito-latin-american-kitchen?share','https://goo.gl/maps/B9MC5B9wYBdzFhG17',
                    'https://goo.gl/maps/nub6Auhu9TdnB14z7','https://goo.gl/maps/JU4gyNxV6qY1VXzbA'
                ]
    #bot.sendLocation(@hungrylehbot, latitude=lat, longitude=lon),
    update.message.reply_text(
        random.choice(randomlist),
        reply_markup=ReplyKeyboardRemove(),
    )    
    context.bot.sendChatAction(chat_id=update.message.chat_id, action = telegram.ChatAction.TYPING)
    sleep(random.choice(TYPESPEED))
    
    update.message.reply_text(
        'Nah, enjoyðŸ˜›',
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END
'''


'''
def places_central(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    logger.info("%s selected Central.", user.first_name)
    reply_keyboard = [['Nice!', 'Lmao lame']]
    centrallist = ['https://goo.gl/maps/P5C5nDYrn8G19LPT6','https://g.page/pollensingapore?share','https://goo.gl/maps/HAeyHWqV3vmDQnNs9',
                    'https://g.page/OverEasySG?share','https://g.page/theassemblygroundcineleisure?share','https://goo.gl/maps/o8DuJkroyoSK1MqK9',
                    'https://goo.gl/maps/1iX2BCbDSKWUVepm7','https://goo.gl/maps/G4cv4uBhP3ve7soc8','https://goo.gl/maps/DGzoTrv45uD8HXKw5',
                    'https://goo.gl/maps/YKWo1ckMJ3qeEXVZA','https://g.page/wangdaebakbbq?share','https://goo.gl/maps/Fftfy929T1dS7V6t7','https://goo.gl/maps/3TANCBdHR9kfVm1w5',
                    'https://goo.gl/maps/LAhF4yuABZpGvHgr7','https://goo.gl/maps/rkNoBPjYK5LtK2Ax8','https://g.page/prego-sg?share','https://goo.gl/maps/74wZZ3vUwj3aFmGGA',
                    'https://g.page/jibiru?share','https://g.page/menbaka_sg?share','https://goo.gl/maps/B9MC5B9wYBdzFhG17'
                    ]
    #bot.sendLocation(@hungrylehbot, latitude=lat, longitude=lon),
    update.message.reply_text(
        random.choice(centrallist),
        reply_markup=ReplyKeyboardRemove(),
    )    
    context.bot.sendChatAction(chat_id=update.message.chat_id, action = telegram.ChatAction.TYPING)
    sleep(random.choice(TYPESPEED))

    update.message.reply_text(
        'Can ah?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return ACTION
'''


'''
def places_east(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    logger.info("%s selected East", user.first_name)
    reply_keyboard = [['Nice!', 'Lmao lame']]
    eastlist = ['https://g.page/burger-lobster-jewel-changi?share','https://goo.gl/maps/u7DJozX5Knsno5Gq6','https://g.page/elfuegosg?share',
                'https://g.page/TanukiRawJewel?share','https://goo.gl/maps/Et4cABQ1rMkbe4u5A','https://goo.gl/maps/TLAJvBSW6bY9A4Kw5',
                'https://goo.gl/maps/GYPWsS6sYiDVa7xQA','https://goo.gl/maps/fGzi5m6hUJcYBSBE9','https://goo.gl/maps/xDcAHz7fWh4aF8kL8',
                'https://goo.gl/maps/ZCb5nQAVZRrii7Ab9','https://goo.gl/maps/3KhF4bfoRwtr9Tid8','https://goo.gl/maps/CrKBC3PQcaL5sU1M9',
                'https://g.page/itacho-sushi-bedok-mall?share','https://goo.gl/maps/VoMsTWLwSMMMf1g88','https://goo.gl/maps/HKGCTcCXar1u9jN87',
                'https://g.page/tonito-latin-american-kitchen?share','https://goo.gl/maps/JU4gyNxV6qY1VXzbA']
    #bot.sendLocation(@hungrylehbot, latitude=lat, longitude=lon),
    update.message.reply_text(
        random.choice(eastlist),
        reply_markup=ReplyKeyboardRemove(),
    )    
    context.bot.sendChatAction(chat_id=update.message.chat_id, action = telegram.ChatAction.TYPING)
    sleep(random.choice(TYPESPEED))

    update.message.reply_text(
        'Can ah?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return ACTION
'''


'''
def places_west(update: Update, context: CallbackContext) -> int:
    user = update.message.from_user
    logger.info("%s selected West.", user.first_name)
    reply_keyboard = [['Nice!', 'Lmao lame']]
    westlist = ['https://g.page/HaidilaoIMM?share','https://goo.gl/maps/x5e4Ro9NxgucRHjM8','https://g.page/BrotzeitWestgate?share',
                'https://goo.gl/maps/UR37N1bBYAHfyPLN8','https://goo.gl/maps/QL6kJ1Hu9MxL3wVQ8','https://goo.gl/maps/JWNgN5uFBGo1FjTx8',
                'https://goo.gl/maps/9hmwFiL9DC5ugpEN8','https://g.page/ENSakaba-JEM?share','https://goo.gl/maps/qDeTVYc9RxSbU9rv8',
                'https://goo.gl/maps/Gz2XCxEdNP5oomxu7','https://goo.gl/maps/5VtjHapbwQ714RmF6','https://goo.gl/maps/MENsUrKojYjeVP649',
                'https://goo.gl/maps/n3zcrLJZsXkZYiwT8','https://goo.gl/maps/v5MJhQGfwMrDy2d9A','https://g.page/OPPABBQ?share',
                'https://goo.gl/maps/nub6Auhu9TdnB14z7']
    #bot.sendLocation(@hungrylehbot, latitude=lat, longitude=lon),
    update.message.reply_text(
        random.choice(westlist),
        reply_markup=ReplyKeyboardRemove()
    )    
    context.bot.sendChatAction(chat_id=update.message.chat_id, action = telegram.ChatAction.TYPING)
    sleep(random.choice(TYPESPEED))

    update.message.reply_text(
        'Can ah?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return ACTION
'''